[{"C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\index.js":"1","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\App.js":"2","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\Login\\Login.js":"3","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\Home\\Home.js":"4","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\MainHeader\\MainHeader.js":"5","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\MainHeader\\Navigation.js":"6","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\UI\\Button\\Button.js":"7","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\UI\\Card\\Card.js":"8","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\store\\auth-context\\auth-context.js":"9","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\UI\\Input\\Input.js":"10"},{"size":206,"mtime":1663383996176,"results":"11","hashOfConfig":"12"},{"size":1071,"mtime":1663409262995,"results":"13","hashOfConfig":"12"},{"size":3576,"mtime":1663412035287,"results":"14","hashOfConfig":"12"},{"size":250,"mtime":1663383997068,"results":"15","hashOfConfig":"12"},{"size":307,"mtime":1663409445698,"results":"16","hashOfConfig":"12"},{"size":682,"mtime":1663410087970,"results":"17","hashOfConfig":"12"},{"size":353,"mtime":1663383996940,"results":"18","hashOfConfig":"12"},{"size":218,"mtime":1663383996740,"results":"19","hashOfConfig":"12"},{"size":332,"mtime":1663411493827,"results":"20","hashOfConfig":"12"},{"size":506,"mtime":1663413371406,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"16g4hos",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\index.js",[],["45","46"],"C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\App.js",["47"],"import React, { useState, useEffect, useContext } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context/auth-context\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedLoginInfo = localStorage.getItem(\"isLoggedIn\");\n    if (storedLoginInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler }}\n    >\n      <MainHeader />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\Login\\Login.js",["48"],"import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\n\n// 컴포넌트 밖에 생성 -> 컴포넌트 내에서 상호작용이 필요 없기때문.\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\"),\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\"),\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PASSWORD\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6,\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6,\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  //구조분해할당\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  // useEffect 사용\n  useEffect(() => {\n    const identifierTimer = setTimeout(() => {\n      console.log(\"checking validity\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 300);\n\n    return () => {\n      console.log(\"clean up\");\n      clearTimeout(identifierTimer);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(\n    //   event.target.value.includes(\"@\") && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_PASSWORD\", val: event.target.value });\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: \"INPUT_BLUR\",\n      isValid: false,\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\",\n      isValid: false,\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        ></Input>\n        <Input\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        ></Input>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\Home\\Home.js",[],"C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\MainHeader\\Navigation.js",[],"C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\UI\\Card\\Card.js",[],"C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\store\\auth-context\\auth-context.js",[],"C:\\Users\\wjdgp\\Desktop\\TIL\\4.Effects, Reducers, Context\\src\\components\\UI\\Input\\Input.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":48},{"ruleId":"57","severity":1,"message":"58","line":75,"column":6,"nodeType":"59","endLine":75,"endColumn":37,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emailState.isValid' and 'passwordState.isValid'. Either include them or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]",{"range":"66","text":"67"},[1715,1746],"[emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]"]